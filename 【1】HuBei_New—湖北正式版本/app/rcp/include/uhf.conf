#define UHF_DECLEAR_PROC(NAME) WORD32 NAME(T_Msg *,T_Msg *);

#define BOARD_TYPE_PURM     (0)
#define BOARD_TYPE_RBCB1    (1)
#define BOARD_TYPE_RFCB     (2)
#define BOARD_TYPE_RFCB2    (3)
#define BOARD_TYPE_RFCB_BT  (4)

#define  UHF_BOARD_TYPE        BOARD_TYPE_RFCB_BT

#define RCP_RES_DEBUG   (0)

/*模块支持的功能设置,根据不同的平台配置*/
#define USP_UHF_AUTO_PROTECTED_USE  TRUE    
#define USP_UHF_LKCL_USE            TRUE
#define USP_UHF_ADF_4350_USE        FALSE
#define USP_UHF_PLL_2531_USE        FALSE
#define USP_UHF_PLL_2541_USE        TRUE
#define SUPPORT_HOP_FREQ            TRUE
#define USE_INVENTORY_RF_CONFIG     TRUE
#define UHF_RF_ADJUST_PR_BALANCE    TRUE
#define UHF_RF_PT_IN_EEPROM         TRUE

#if (UHF_BOARD_TYPE == BOARD_TYPE_RBCB1)
#define FPGA_FREQUENCE         (30720000)
#define WRITE_RCV_DELAY_H      (0x0009)  
#define WRITE_RCV_DELAY_L      (0x6000)
#else
#define FPGA_FREQUENCE         (26000000)
#define WRITE_RCV_DELAY_H      (0x0007)  
#define WRITE_RCV_DELAY_L      (0x6590)
#endif

/***************************************************************/
/**********************接收到的消息相关配置***********************/
/***************************************************************/

enum tagT_USPUHFRcvMsgID
{  
   EV_USP_UHF_MSG_START=0xB000,
   EV_USP_UHF_CFG_RCV_TIME_OUT,
   EV_USP_UHF_RF_CFG_REQUEST_TIMEOUT,
   EV_USP_UHF_RF_TIME_OUT,
   EV_USP_UHF_INVENT_RF_CFG,
   EV_USP_UHF_WORDK_MSG_START=0xB100,
   EV_USP_UHF_EPC_INVENT,
   EV_USP_UHF_EPC_READ,
   EV_USP_UHF_EPC_MATCH_READ,
   EV_USP_UHF_EPC_VERIFY_READ,
   EV_USP_UHF_EPC_WRITE,
   EV_USP_UHF_EPC_VERIFY_WRITE,
   EV_USP_UHF_EPC_LOCK,
   EV_USP_UHF_EPC_KILL,
   EV_USP_UHF_EPC_BLOCKLOCK,
   EV_USP_UHF_EPC_READLOCK,
   EV_USP_UHF_ISO6B_INVENT,
   EV_USP_UHF_ISO6B_READ,
   EV_USP_UHF_ISO6B_MATCH_READ,
   EV_USP_UHF_ISO6B_WRITE,
   EV_USP_UHF_ISO6B_LOCK,
   EV_USP_UHF_ISO6B_LOCKQUERY,
   EV_USP_UHF_STOP_MAC,
   EV_USP_UHF_SPEC_MSG,
   EV_USP_UHF_CFG_CHG,
   EV_USP_UHF_EPC_QUERY,
   EV_USP_UHF_ISO6B_GETTAG,
   EV_USP_UHF_EPC_IPJQT,
   EV_USP_UHF_GB_INVENT,       //  support new GB B117
   EV_USP_UHF_GB_QUERY,    
   EV_USP_UHF_GB_READ,
   EV_USP_UHF_GB_MATCH_READ,
   EV_USP_UHF_GB_WRITE,
   EV_USP_UHF_GB_ERASE,
   EV_USP_UHF_GB_LOCK,
   EV_USP_UHF_GB_KILL,            //  support new GB end
   EV_USP_UHF_MAX_MSG_ID,
};


enum tagT_USPUHFSndMsgID
{
   EV_USP_UHF_RES_MSG_START=0xB200,
   EV_USP_UHF_REQUEST_CFG,
   EV_USP_UHF_CFG_RF,
   EV_USP_UHF_RF_MSG_RES_START=0xB250,
   EV_USP_UHF_CFG_RF_RES,
   EV_USP_UHF_INVENT_RF_CFG_RES,
   EV_USP_UHF_WORDK_MSG_RES_START=0xB300,
   EV_USP_UHF_EPC_INVENT_RES,
   EV_USP_UHF_EPC_READ_RES,
   EV_USP_UHF_EPC_MATCH_READ_RES,
   EV_USP_UHF_EPC_VERIFY_READ_RES,
   EV_USP_UHF_EPC_WRITE_RES,
   EV_USP_UHF_EPC_VERIFY_WRITE_RES,
   EV_USP_UHF_EPC_LOCK_RES,
   EV_USP_UHF_EPC_KILL_RES,
   EV_USP_UHF_EPC_BLOCKLOCK_RES,
   EV_USP_UHF_EPC_READLOCK_RES,
   EV_USP_UHF_ISO6B_INVENT_RES,
   EV_USP_UHF_ISO6B_READ_RES,
   EV_USP_UHF_ISO6B_MATCH_READ_RES,
   EV_USP_UHF_ISO6B_WRITE_RES,
   EV_USP_UHF_ISO6B_LOCK_RES,
   EV_USP_UHF_ISO6B_LOCKQUERY_RES,
   EV_USP_UHF_STOP_MAC_RES,
   EV_USP_UHF_SPEC_MSG_RES,
   EV_USP_UHF_EPC_IPJQT_RES,
   EV_USP_UHF_GB_INVENT_RES,   // support new GB
   EV_USP_UHF_GB_READ_RES,
   EV_USP_UHF_GB_MATCH_READ_RES,
   EV_USP_UHF_GB_WRITE_RES,
   EV_USP_UHF_GB_ERASE_RES,
   EV_USP_UHF_GB_LOCK_RES,
   EV_USP_UHF_GB_KILL_RES,        // support new GB end
   EV_USP_UHF_MAX_RES_MSG_ID,
};

UHF_DECLEAR_PROC(usp_uhf_epc_msg_inventory)
UHF_DECLEAR_PROC(usp_uhf_epc_msg_read)
UHF_DECLEAR_PROC(usp_uhf_epc_msg_write)
UHF_DECLEAR_PROC(usp_uhf_epc_msg_lock)
UHF_DECLEAR_PROC(usp_uhf_epc_msg_kill)
UHF_DECLEAR_PROC(usp_uhf_epc_msg_blocklock)
UHF_DECLEAR_PROC(usp_uhf_epc_msg_readlock)
UHF_DECLEAR_PROC(usp_uhf_iso6b_msg_inventory)
UHF_DECLEAR_PROC(usp_uhf_iso6b_msg_read)
UHF_DECLEAR_PROC(usp_uhf_iso6b_msg_write)
UHF_DECLEAR_PROC(usp_uhf_iso6b_msg_lock)
UHF_DECLEAR_PROC(usp_uhf_iso6b_msg_lockquery)
UHF_DECLEAR_PROC(usp_uhf_msg_request_cfg)
UHF_DECLEAR_PROC(usp_uhf_msg_stop_proc)
UHF_DECLEAR_PROC(usp_uhf_msg_spec_proc)
UHF_DECLEAR_PROC(usp_uhf_msg_query)
UHF_DECLEAR_PROC(usp_uhf_iso6b_msg_gettag)
UHF_DECLEAR_PROC(usp_uhf_epc_msg_ipjqt)
UHF_DECLEAR_PROC(usp_uhf_msg_cfg)
UHF_DECLEAR_PROC(usp_uhf_gb_msg_inventory)// support for GB
UHF_DECLEAR_PROC(usp_uhf_gb_msg_query) 
UHF_DECLEAR_PROC(usp_uhf_gb_msg_read)
UHF_DECLEAR_PROC(usp_uhf_gb_msg_write) 
UHF_DECLEAR_PROC(usp_uhf_gb_msg_lock)             
UHF_DECLEAR_PROC(usp_uhf_gb_msg_kill)
UHF_DECLEAR_PROC(usp_uhf_gb_msg_erase)   // support for GB end

#define  USP_UHF_MSG_PROC_TABLE  { \
    {EV_USP_UHF_EPC_INVENT,       EV_USP_UHF_EPC_INVENT_RES,       usp_uhf_epc_msg_inventory, 0},\
    {EV_USP_UHF_EPC_READ,         EV_USP_UHF_EPC_READ_RES,         usp_uhf_epc_msg_read,        0},\
    {EV_USP_UHF_EPC_MATCH_READ,   EV_USP_UHF_EPC_MATCH_READ_RES,   usp_uhf_epc_msg_read,        0},\
    {EV_USP_UHF_EPC_VERIFY_READ,  EV_USP_UHF_EPC_VERIFY_READ_RES,  usp_uhf_epc_msg_read,        0},\
    {EV_USP_UHF_EPC_WRITE,        EV_USP_UHF_EPC_WRITE_RES,        usp_uhf_epc_msg_write,       0},\
    {EV_USP_UHF_EPC_VERIFY_WRITE, EV_USP_UHF_EPC_VERIFY_WRITE_RES, usp_uhf_epc_msg_write,       0},\
    {EV_USP_UHF_EPC_LOCK,         EV_USP_UHF_EPC_LOCK_RES,         usp_uhf_epc_msg_lock,        0},\
    {EV_USP_UHF_EPC_KILL,         EV_USP_UHF_EPC_KILL_RES,         usp_uhf_epc_msg_kill,        0},\
    {EV_USP_UHF_EPC_BLOCKLOCK,    EV_USP_UHF_EPC_BLOCKLOCK_RES,    usp_uhf_epc_msg_blocklock,    0},\
    {EV_USP_UHF_EPC_READLOCK,     EV_USP_UHF_EPC_READLOCK_RES,     usp_uhf_epc_msg_readlock,     0},\
    {EV_USP_UHF_ISO6B_INVENT,     EV_USP_UHF_ISO6B_INVENT_RES,     usp_uhf_iso6b_msg_inventory,  0},\
    {EV_USP_UHF_ISO6B_READ,       EV_USP_UHF_ISO6B_READ_RES,       usp_uhf_iso6b_msg_read,       0},\
    {EV_USP_UHF_ISO6B_MATCH_READ, EV_USP_UHF_ISO6B_MATCH_READ_RES, usp_uhf_iso6b_msg_read,       0},\
    {EV_USP_UHF_ISO6B_WRITE,      EV_USP_UHF_ISO6B_WRITE_RES,      usp_uhf_iso6b_msg_write,      0},\
    {EV_USP_UHF_ISO6B_LOCK,       EV_USP_UHF_ISO6B_LOCK_RES,       usp_uhf_iso6b_msg_lock,       0},\
    {EV_USP_UHF_ISO6B_LOCKQUERY,  EV_USP_UHF_ISO6B_LOCKQUERY_RES,  usp_uhf_iso6b_msg_lockquery,   0},\
    {EV_USP_UHF_STOP_MAC,         EV_USP_UHF_STOP_MAC_RES,         usp_uhf_msg_stop_proc,        0},\
    {EV_USP_UHF_SPEC_MSG,         EV_USP_UHF_SPEC_MSG,             usp_uhf_msg_spec_proc,        0},\
    {EV_USP_UHF_CFG_CHG,          EV_USP_UHF_REQUEST_CFG,          usp_uhf_msg_request_cfg,      0},\
    {EV_USP_UHF_EPC_QUERY,        EV_USP_UHF_EPC_INVENT_RES,       usp_uhf_msg_query,            0},\
    {EV_USP_UHF_ISO6B_GETTAG,     EV_USP_UHF_ISO6B_INVENT_RES,     usp_uhf_iso6b_msg_gettag,      0},\
    {EV_USP_UHF_EPC_IPJQT,        EV_USP_UHF_EPC_IPJQT_RES,        usp_uhf_epc_msg_ipjqt,         0},\
    {EV_USP_UHF_GB_INVENT,       EV_USP_UHF_GB_INVENT_RES,       usp_uhf_gb_msg_inventory, 0},\
    {EV_USP_UHF_GB_QUERY,        EV_USP_UHF_GB_INVENT_RES,       usp_uhf_gb_msg_query,            0},\
    {EV_USP_UHF_GB_READ,         EV_USP_UHF_GB_READ_RES,         usp_uhf_gb_msg_read,        0},\
    {EV_USP_UHF_GB_MATCH_READ,   EV_USP_UHF_GB_MATCH_READ_RES,   usp_uhf_gb_msg_read,        0},\
    {EV_USP_UHF_GB_WRITE,        EV_USP_UHF_GB_WRITE_RES,        usp_uhf_gb_msg_write,       0},\
    {EV_USP_UHF_GB_ERASE,        EV_USP_UHF_GB_ERASE_RES,        usp_uhf_gb_msg_erase,       0},\
    {EV_USP_UHF_GB_LOCK,         EV_USP_UHF_GB_LOCK_RES,         usp_uhf_gb_msg_lock,        0},\
    {EV_USP_UHF_GB_KILL,         EV_USP_UHF_GB_KILL_RES,         usp_uhf_gb_msg_kill,        0},\
 }

/***************************************************************/
/**********************协议相关配置***********************/
/***************************************************************/

#define EPC_MAX_MASK_WORD_LEN      (32)
#define EPC_SETLECT_MASK_NUM       (6)

/*定义默认的EPC推荐参数*/
#define  EPC_RFMODE_TABLE   {\
    {0,EPC_DRValue_DRV_8,0,EPC_MValue_MV_2,EPC_ForwardLinkModulation_PR_ASK,EPC_SpectralMaskIndicator_SI,160000,1500,12500,12500,0},\
    {1,EPC_DRValue_DRV_8,0,EPC_MValue_MV_FM0,EPC_ForwardLinkModulation_PR_ASK,EPC_SpectralMaskIndicator_SI,40000,1500,25000,25000,0},\
    {2,EPC_DRValue_DRV_64_3,0,EPC_MValue_MV_4,EPC_ForwardLinkModulation_PR_ASK,EPC_SpectralMaskIndicator_SI,640000,1500,9523,9523,0},\
    {3,EPC_DRValue_DRV_64_3,0,EPC_MValue_MV_FM0,EPC_ForwardLinkModulation_PR_ASK,EPC_SpectralMaskIndicator_SI,640000,1500,6250,6250,0},\
}

/*定义默认的GB推荐参数*/
///  Fix me
#define  GB_RFMODE_TABLE   {\
     {0,GB_MValue_MV_FM0,GB_GBForwardLinkModulation_DSB_ASK,80000,320000,0,0},\
}


/*定义默认的ISO6B推荐参数*/
#define ISO6B_RFMODE_TABLE  {\
{0,40000,0},\
{1,40000,3}\
}

#define EPC_RFMODE_TABLE_LEN        (5)
#define ISO6B_RFMODE_TABLE_LEN      (2)
#define GB_RFMODE_TABLE_LEN         (4)
/***************************************************************/
/**********************射频相关配置***********************/
/***************************************************************/
#define  RF_FORWARD_PT_NUM         (14) /* 前向定标点个数 */
#define  RF_BACKWARD_PT_NUM        (7) /* 反向定标点个数 */

#define  READER_ANTENNA_COUNT      (4)
#define  UHF_RF_ANT_POWER_COUNT     (4)

#define  CHINA800_FREQUENCY_LEN  (20)
#define  CHINA900_FREQUENCY_LEN  (20)
#define  AMERIACAN_FREQUENCY_LEN (50)
#define  MAX_FREQ_HOP_NUM        (65)
#define  FREQ800MTABLE_NUM      (1)
#define  FREQ900MTABLE_NUM      (2)
#define  FREQ800900MTABLE_NUM   (3)

#define  China800Frequency    {840125,840375,840625,840875,841125,841375,\
 841625,841875,842125,842375,842625 ,842875,843125,843375,843625,843875,844125,\
 844375,844625,844875} 
 
#define  China900Frequency    {920125,920375,920625,920875,921125,921375,\
 921625,921875,922125,922375,922625,922875,923125,923375,923625,923875,924125,\
 924375,924625,924875}
 
#define  AmericanFrequency    {902750,903250,903750,904250,904750,905250,\
 905750,906250,906750,907250,907750,908250,908750,909250,909750,910250,910750,\
 911250,911750,912250,912750,913250,913750,914250,914750,915250,915750,916250,\
 916750,917250,917750,918250,918750,919250,919750,920250,920750,921250,921750,\
 922250,922750,923250,923750,924250,924750,925250,925750,926250,926750,927250}

#define  HOPTABLE800M    {\
          {0,20, China800Frequency}\
}

#define  HOPTABLE900M    {\
          {0,20, China900Frequency},\
          {1,50, AmericanFrequency}\
}

#define  HOPTABLE800900M    {\
          {0,20, China800Frequency},\
          {1,20, China900Frequency},\
          {2,50, AmericanFrequency}\
}
//吧capabilities中的定义行啊移植到这里

#define  READER_MAX_EVENT_NUM                           9

#define  MAX_NUM_ANT_SUPPORT                            (4)
#define  MaxEPCSelectNum                                3 /*最大的select数 对应C1G2Filter最大成员项*/
#define   MaxGBSortNum                                  1    /*最大GB 支持sort 数*/
#define  MaxISO6BGroupSelectNum                         10 /*最大的select数 对应ISO6BFilter最大成员项*/

#define  CAN_SETANTENNA_PROPERTIES                      0
#define  HAS_UTC_CLOCK_CAPABILITIES                     1

#define   PROTOCAL_NUMBER                               3
#define   PROTOCALID_EPC                                1
#define   PROTOCALID_ISO                                100
#define   PROTOCALID_GB                                200
/*LLRPCapabilities*/
#define  CAN_DO_RFSURVEY                                0
#define  CAN_REPORT_BUFFER_FILL_WARNING                 1
#define   SUPPORTS_CLIENT_REQUEST_OP_SPEC               1
#define  CAN_DO_TAGINVENTORY_STATEAWARE_SINGULATION     0
#define  SUPPORT_EVENT_AND_REPORT_HOLDING               0
#define  MAX_NUM_PRIORITY_LEVELS_SUPPORTED              7
#define  CLIENT_REQUEST_OPSPEC_TIMEOUT                  2000
#define  MAX_NUM_RO_SPEC                                32
#define  MAX_NUM_SPECS_PERROSPEC                        5
#define  MAX_NUM_INVENTORY_PARA_SPECS_PERAISPEC         5
#define  MAX_NUM_ACCESSSPECS                            32
#define  MAX_NUM_OPSPECS_PER_ACCESSSPEC                 8

/*RegulatoryCapabilities 还没有定下来*/

#define           OAM_CFG_ANT_POWER_MAX                 33
#define           OAM_CFG_ANT_POWER_MIN                 15
#define           SUPPORT_HOPING                        1

                    
/*AIRPROTOCAL capabilities*/
#define  CAN_SUPPORT_BLOCK_ERASE                        0
#define  CAN_SUPPORT_BLOCK_WRITE                        0
#define   MAX_NUM_SELECT_FILTER_PERQUERY                1
#define   MAX_NUM_SORT_FILTER_PERQUERY                  1
#define   MAX_NUM_GROUP_SELECT                          1
#define   MAX_NUM_RETRY_TIMES_FOR_READ                  200
#define   MAX_NUM_RETRY_TIMES_FOR_WRITE                 3
#define   MAX_NUM_RETRY_TIMES_FOR_LOCK                  3
#define   MAX_NUM_RETRY_TIMES_FOR_QUERYLOCK             3
//移植结束
#define POWERTABLE  {15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33}


