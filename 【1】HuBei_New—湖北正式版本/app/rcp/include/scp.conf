/*********************************************************************
* 
* 文件说明:
*	系统主控(SCP)配置文件, 用来配置系统初始化、应用任务和系统控制服务
* 
**********************************************************************/

/***********************************************************
 *                  任务设置                               *
 ***********************************************************/
#ifdef _USP_OSS_SCP_H_INCLUDE
typedef enum tagT_USPOssModuleID
{
    USP_OSS_MODULE_START = USP_RB_TNO_BASE,             /* 起始任务号 */        

    USP_OSS_MODULE_BSP = (USP_OSS_MODULE_START + 20),   /* 底层模块 */
    USP_OSS_MODULE_TIMER,                               /* 定时器管理 */
    USP_OSS_MODULE_DSM,                                 /* 数据存储管理 */
    USP_OSS_MODULE_MM,                                  /* 内存管理 */
    USP_OSS_MODULE_SERVER,                              /* 后台 */
    
    USP_OSS_SMP_TNO,                                    /* 状态监控 */
    USP_OSS_SCP_TNO,                                    /* 系统主控 */        
    USP_COMM_TNO,                                       /* 通信任务 */
    USP_COMM_HOLD_TNO,                                  /* 断链缓存 */
    USP_OAM_CMP_TNO,                                    /* 配置管理 */    
    USP_OAM_VMP_TNO,                                    /* 版本管理 */
    USP_OAM_DMP_TNO,                                    /* 诊断测试 */     
    USP_OAM_LAP_TNO,                                    /* 日志和异常探针 */
    USP_OAM_CLI_TNO,                                    /* 命令行 */
    USP_OAM_AMP_TNO,                                    /* 告警管理 */
    USP_OAM_IPD_TNO,                                    /* IP发现 */
    USP_IDTE_SUB_TNO,                                   /* IDTE辅助任务 */
    USP_IDTE_CASE_TNO,                                  /* IDTE用例任务 */

    USP_FPGA_TNO,                                       /* FPGA处理 */
    USP_UHF_TNO,                                        /* UHF协议处理 */ 
    USP_RDP_RULE_TNO,                                   /* UHF规则下发 */
    USP_RDP_REPORT_TNO,                                 /* UHF报告处理 */
    USP_RDP_LLRP_TNO,                                   /* UHF规则处理 */     
    USP_PROTOCOL_DSRC_TNO,                              /* DSRC协议处理 */    
    USP_MPI_TNO,                                        /* MPI协议处理 */

    USP_OSS_PSAM_EXT_TNO,                               /* 扩展PSAM管理 */        
    USP_OSS_GPIO_TNO,                                   /* GPIO管理 */ 
    USP_OSS_MISC_TNO,                                   /* 杂项管理 */ 
    USP_VIR_TAG_TNO,                                    /*  */
    USP_CUST_TNO_START = (USP_OSS_MODULE_START + 51),   /* 自定义任务 */
        
    USP_UHF_RF_TNO = USP_RF_TNO_BASE + 1,               /* UHF射频控制 */
    USP_PROTOCOL_ETCRFC_TNO,                            /* ETC射频控制 */           
}T_USPOssModuleID;
#endif  /* _USP_OSS_SCP_H_INCLUDE */

#ifdef _CLI_C_INCLUDE
USP_OSS_SCP_BEGIN_MODULE_CONF_DEFINE
USP_OSS_SCP_MODULE_CONF(USP_OSS_MODULE_BSP,     "BSP",      "底层模块"      )
USP_OSS_SCP_MODULE_CONF(USP_OSS_MODULE_TIMER,   "TIMER",    "定时器管理"    )
USP_OSS_SCP_MODULE_CONF(USP_OSS_MODULE_DSM,     "DSM",      "数据存储管理"  )
USP_OSS_SCP_MODULE_CONF(USP_OSS_MODULE_MM,      "MM",       "内存管理"      )
USP_OSS_SCP_MODULE_CONF(USP_OSS_MODULE_SERVER,  "SERVER",   "后台"          )

USP_OSS_SCP_MODULE_CONF(USP_OSS_SMP_TNO,        "SMP",      "状态监控"      )
USP_OSS_SCP_MODULE_CONF(USP_OSS_SCP_TNO,        "SCP",      "系统主控"      )
USP_OSS_SCP_MODULE_CONF(USP_OSS_PSAM_EXT_TNO,   "PSAMEXT",  "扩展PSAM管理"  )
USP_OSS_SCP_MODULE_CONF(USP_OSS_GPIO_TNO,       "GPIO",     "GPIO管理"      )
USP_OSS_SCP_MODULE_CONF(USP_OSS_MISC_TNO,       "MISC",     "杂项管理"      )
USP_OSS_SCP_MODULE_CONF(USP_COMM_TNO,           "COMM",     "通信任务"      )
USP_OSS_SCP_MODULE_CONF(USP_COMM_HOLD_TNO,      "HOLD",     "断链缓存"      )
USP_OSS_SCP_MODULE_CONF(USP_OAM_CMP_TNO,        "CMP",      "配置管理"      )
USP_OSS_SCP_MODULE_CONF(USP_OAM_VMP_TNO,        "VMP",      "版本管理"      )
USP_OSS_SCP_MODULE_CONF(USP_OAM_DMP_TNO,        "DMP",      "诊断测试"      )
USP_OSS_SCP_MODULE_CONF(USP_OAM_LAP_TNO,        "LAP",      "日志和异常探针")
USP_OSS_SCP_MODULE_CONF(USP_OAM_CLI_TNO,        "CLI",      "命令行"        )
USP_OSS_SCP_MODULE_CONF(USP_OAM_AMP_TNO,        "AMP",      "告警管理"      )
USP_OSS_SCP_MODULE_CONF(USP_OAM_IPD_TNO,        "IPD",      "IP发现"        )
USP_OSS_SCP_MODULE_CONF(USP_IDTE_SUB_TNO,       "SUB",      "IDTE辅助任务"  )
USP_OSS_SCP_MODULE_CONF(USP_IDTE_CASE_TNO,      "CASE",     "IDTE用例任务"  )

USP_OSS_SCP_MODULE_CONF(USP_FPGA_TNO,           "FPGA",     "FPGA处理"      )
USP_OSS_SCP_MODULE_CONF(USP_UHF_TNO,            "UHF",      "UHF协议处理"   )
USP_OSS_SCP_MODULE_CONF(USP_RDP_RULE_TNO,       "UHFRULE",  "UHF规则下发"   )
USP_OSS_SCP_MODULE_CONF(USP_RDP_REPORT_TNO,     "UHFREPORT","UHF报告处理"   )
USP_OSS_SCP_MODULE_CONF(USP_RDP_LLRP_TNO,       "UHFLLRP",  "UHF规则处理"   )
USP_OSS_SCP_MODULE_CONF(USP_PROTOCOL_DSRC_TNO,  "DSRC",     "DSRC协议处理"  )
USP_OSS_SCP_MODULE_CONF(USP_MPI_TNO,            "MPI",      "MPI协议处理"   )

USP_OSS_SCP_MODULE_CONF(USP_CUST_TNO_START,     "CUST",     "自定义任务"    )

USP_OSS_SCP_MODULE_CONF(USP_UHF_RF_TNO,         "UHFRF",    "UHF射频控制"   )
USP_OSS_SCP_MODULE_CONF(USP_PROTOCOL_ETCRFC_TNO,"ETCRF",    "ETC射频控制"   )
USP_OSS_SCP_MODULE_CONF(USP_VIR_TAG_TNO, "VIRTAG",    "VIRTAG"   )
USP_OSS_SCP_END_MODULE_CONF_DEFINE
#endif  /* _CLI_C_INCLUDE */

#ifdef _OSS_SCP_C_INCLUDE
/***********************************************************
 *                  系统选项设置                           *
 ***********************************************************/
/* 配置是否需要定时进行NTP同步 */
#define SCP_NTP_USE         TRUE

/* 定义获取NTP信息函数 */
#define SCP_GET_NTP_CONFIG  usp_oam_cmp_getNtpCfg

/* 定义NTP失败后告警函数 */
#define SCP_SEND_NTP_ALARM //usp_ntp_amp_alarm

/* 等待上电响应的时间(毫秒) */
#define SCP_WAIT_POWERON_TIMER              (40 * 1000)

/* 等待上电响应的最大尝试次数 */
#define SCP_WAIT_POWERON_MAXTRY             (3)

/* 系统启动阶段打印控制缓冲区大小 */
#define SCP_PRINTF_BUF_SIZE                 (512 * 1024)

/* 配置是否需要验证上电轮次 */
#define SCP_VERIFY_POWERON_ROUND            TRUE

/* 用户自定义任务最大个数 */
#define SCP_MAX_CUST_TASK_NUM               (10)

/***********************************************************
 *                  系统初始化配置                         *
 ***********************************************************/
/* 声明初始化函数 */
#if USP_LTK_USE
SCP_DECLEAR_INIT_ENTRY(usp_ltk_init)
#endif
#if USP_OSS_TIMER_USE
SCP_DECLEAR_INIT_ENTRY(usp_oss_timer_init)
#endif
#if USP_OSS_DSM_USE
SCP_DECLEAR_INIT_ENTRY(usp_oss_dsm_init)
#endif

/*** 在此处添加自定义初始化函数声明 ***********************/

/**********************************************************/

/* 配置初始化过程 */
SCP_BEGIN_APPINIT_DEFINE

#if USP_LTK_USE
SCP_IMPLEMENT_APPINIT(usp_ltk_init, USP_OSS_SCP_ERROR_TYPE_RESET)
#endif
#if USP_OSS_TIMER_USE
SCP_IMPLEMENT_APPINIT(usp_oss_timer_init, USP_OSS_SCP_ERROR_TYPE_RESET)
#endif
#if USP_OSS_DSM_USE
SCP_IMPLEMENT_APPINIT(usp_oss_dsm_init, USP_OSS_SCP_ERROR_TYPE_RESET)
#endif

/*** 在此处添加自定义初始化过程 ***************************/

/**********************************************************/

SCP_END_APPINIT_DEFINE

/***********************************************************
 *                  应用任务配置                           *
 ***********************************************************/
/* 声明任务入口函数 */
#if USP_OSS_TIMER_USE
SCP_DECLEAR_TASK_ENTRY(usp_oss_timer_scanEntry)
#endif

#if USP_OAM_CLI_USE
SCP_DECLEAR_TASK_ENTRY(usp_cli_mainEntry)
SCP_DECLEAR_TASK_ENTRY(usp_cli_shellEntry)
SCP_DECLEAR_TASK_ENTRY(usp_cli_monitorAgentEntry)
SCP_DECLEAR_TASK_ENTRY(usp_cli_traceAgentEntry)
#endif

#if USP_OAM_LAP_USE
SCP_DECLEAR_TASK_ENTRY(usp_oam_lap_entry)
#endif

#if USP_OAM_CMP_USE
SCP_DECLEAR_TASK_ENTRY(usp_oam_cmp_entry)
#endif
#if USP_OAM_DMP_USE
SCP_DECLEAR_TASK_ENTRY(usp_oam_dmp_entry)
#endif

#if USP_COMM_USE
SCP_DECLEAR_TASK_ENTRY(usp_comm_appCtrlEntry)
SCP_DECLEAR_TASK_ENTRY(usp_comm_linkCtrlEntry)
SCP_DECLEAR_TASK_ENTRY(usp_comm_holdCtrlEntry)
SCP_DECLEAR_TASK_ENTRY(usp_comm_connCtrlEntry)
SCP_DECLEAR_TASK_ENTRY(usp_comm_recvCtrlEntry)
#endif

#if USP_OSS_SMP_USE
SCP_DECLEAR_TASK_ENTRY(usp_oss_smp_entry)
#endif
#if USP_OS_FREERTOS
#ifdef INCLUDE_DEBUG
SCP_DECLEAR_TASK_ENTRY(usp_rspDebugProxyEntry)
SCP_DECLEAR_TASK_ENTRY(usp_rspDebugInputEntry)
#endif
#endif

#if USP_OAM_VMP_BODY_USE
SCP_DECLEAR_TASK_ENTRY(usp_oam_vmp_entry)
#endif

#if USP_OAM_AMP_USE
SCP_DECLEAR_TASK_ENTRY(usp_oam_amp_entry)
//SCP_DECLEAR_TASK_ENTRY(ampTest_Entry)
#endif

#if USP_OSS_PSAM_EXT_USE
SCP_DECLEAR_TASK_ENTRY(usp_oss_psam_ext_entry)
#endif

#if USP_VIR_TAG_USE
SCP_DECLEAR_TASK_ENTRY(usp_vir_tagEntry)
#endif

/*** 在此处添加自定义应用任务入口函数函数声明 *************/

//SCP_DECLEAR_TASK_ENTRY(P_OAM_CFG_Entry)
//SCP_DECLEAR_TASK_ENTRY(P_RDP_Entry)
//SCP_DECLEAR_TASK_ENTRY(P_Rcp_Entry)
//SCP_DECLEAR_TASK_ENTRY(LightFlashTaskEntry)

#if UHF_PROTOCOL_USE
SCP_DECLEAR_TASK_ENTRY(usp_uhf_entry)
#endif

#if UHF_RDP_LLRP_USE
SCP_DECLEAR_TASK_ENTRY(usp_rdp_rule_Entry)
SCP_DECLEAR_TASK_ENTRY(usp_rdp_report_Entry)
SCP_DECLEAR_TASK_ENTRY(usp_rdp_llrpEntry)
#endif

#if USP_OSS_GPIO_USE
SCP_DECLEAR_TASK_ENTRY(usp_oss_gpio_msgProcEntry)
SCP_DECLEAR_TASK_ENTRY(usp_oss_gpio_interruptProcEntry)
#endif

SCP_DECLEAR_TASK_ENTRY(usp_comm_ipd_entry)

#if USP_IDTE_USE
SCP_DECLEAR_TASK_ENTRY(SubsidiaryRun)
SCP_DECLEAR_TASK_ENTRY(CaseAppRun)
#endif

#if MPI_PROTOCOL_USE
SCP_DECLEAR_TASK_ENTRY(usp_pro_mpi_MainEntry)
#endif

#if USP_OSS_MISC_USE
SCP_DECLEAR_TASK_ENTRY(usp_oss_misc_entry)
#endif

/*** 在此处添加自定义应用任务入口函数函数声明 *************/
SCP_DECLEAR_TASK_ENTRY(usp_oam_cmp_entry)
/**********************************************************/

/* 开始任务配置 */
SCP_BEGIN_TASK_DEFINE
    
/* 主任务名称, 主任务优先级,                                                                                                                                                             */
/* {                                                                                                                                                                                     */
/*  {名称,              入口函数,                  堆栈大小, 优先级, 任务号,            最大消息个数,  消息大小, 消息队列键值,        出错后的处理方法,               停止消息?, 握手?}, */
/* },                                                                                                                                                                                    */
"usp_scp", 0, USP_PUB_DEV_MODEL_COMMON,
{
    {"ScpService",      usp_scp_serviceEntry,      1024,     10,     USP_OSS_SCP_TNO,   5,             64,      USP_OSS_SCP_MSG_KEY, USP_OSS_SCP_ERROR_TYPE_RESET,  FALSE,    FALSE },
},
#if USP_OAM_LAP_USE
"usp_lap", 0, USP_PUB_DEV_MODEL_COMMON,
{
    {"LAP",             usp_oam_lap_entry,         0,        0,      USP_OAM_LAP_TNO,   1,             0,       USP_OAM_LAP_MSG_KEY, USP_OSS_SCP_ERROR_TYPE_IGNORE, FALSE,    FALSE },
},
#endif
#if USP_OSS_TIMER_USE
"usp_timer", 0, USP_PUB_DEV_MODEL_COMMON,
{
    {"TIMER",           usp_oss_timer_scanEntry,   512,      1,      0,                 0,             0,       0,                   USP_OSS_SCP_ERROR_TYPE_RESET,  FALSE,    FALSE },
},
#endif
#if USP_OAM_CLI_USE
"usp_cli", 0, USP_PUB_DEV_MODEL_COMMON,
{
    {"CLIMain",         usp_cli_mainEntry,         0,        0,      USP_OAM_CLI_TNO,   1,             0,       USP_OAM_CLI_MSG_KEY, USP_OSS_SCP_ERROR_TYPE_IGNORE, FALSE,    TRUE  },
    {"CLIShell",        usp_cli_shellEntry,        0,        0,      0,                 0,             0,       0,                   USP_OSS_SCP_ERROR_TYPE_IGNORE, FALSE,    FALSE },
    {"CLIMonitorAgent", usp_cli_monitorAgentEntry, 0,        0,      0,                 0,             0,       0,                   USP_OSS_SCP_ERROR_TYPE_IGNORE, FALSE,    FALSE },
    {"CLITraceAgent",   usp_cli_traceAgentEntry,   0,        0,      0,                 0,             0,       0,                   USP_OSS_SCP_ERROR_TYPE_IGNORE, FALSE,    FALSE },
},
#endif
#if USP_OAM_CMP_USE
"usp_cmp", 0, USP_PUB_DEV_MODEL_COMMON,
{
    {"CMP",             usp_oam_cmp_entry,         0,        0,      USP_OAM_CMP_TNO,   1,             0,       USP_OAM_CMP_MSG_KEY, USP_OSS_SCP_ERROR_TYPE_RESET,  FALSE,    TRUE  },
},
#endif
#if UHF_PROTOCOL_USE
"usp_uhf", 0, USP_PUB_DEV_MODEL_COMMON,
{
     {"UHF",             usp_uhf_entry,         0,        -1,      USP_UHF_TNO,   1,             0,       USP_UHF_PROTOCOL_KEY, USP_OSS_SCP_ERROR_TYPE_RESET,  FALSE,    FALSE  },
},
#endif

#if UHF_RDP_LLRP_USE
"rdp_rule", 0, USP_PUB_DEV_MODEL_COMMON,
{
     {"RULE",             usp_rdp_rule_Entry,         0,        0,      USP_RDP_RULE_TNO,   1,             0,       USP_UHF_RDP_RULE_KEY, USP_OSS_SCP_ERROR_TYPE_RESET,  FALSE,    FALSE  },
     {"REPORT",           usp_rdp_report_Entry,         0,        0,      USP_RDP_REPORT_TNO,   1,             0,       USP_UHF_RDP_REPORT_KEY, USP_OSS_SCP_ERROR_TYPE_RESET,  FALSE,    FALSE  },
     {"LLRP",             usp_rdp_llrpEntry,         0,        0,      USP_RDP_LLRP_TNO,   1,             0,       USP_UHF_RDP_LLRP_KEY, USP_OSS_SCP_ERROR_TYPE_RESET,  FALSE,    FALSE  },
},
#endif

#if USP_OAM_DMP_USE
"usp_dmp", 0, USP_PUB_DEV_MODEL_COMMON,
{
     {"DMP",           usp_oam_dmp_entry,          0,        0,      USP_OAM_DMP_TNO,   1,            0,       USP_OAM_DMP_MSG_KEY,  USP_OSS_SCP_ERROR_TYPE_IGNORE,  FALSE,   FALSE   },
},
#endif
#if USP_COMM_USE
"usp_comm", 0, USP_PUB_DEV_MODEL_COMMON,
{
    {"AppCtrl",         usp_comm_appCtrlEntry,     1024,     1,      USP_COMM_TNO,      3,             1024,    USP_COMM_MSG_KEY,    USP_OSS_SCP_ERROR_TYPE_RESET,  FALSE,    FALSE },
    {"LinkCtrl",        usp_comm_linkCtrlEntry,    1024,     1,      0,                 0,             0,       0,                   USP_OSS_SCP_ERROR_TYPE_RESET,  FALSE,    FALSE },
    #if 0
    {"HoldCtrl",        usp_comm_holdCtrlEntry,    1024,     1,      USP_COMM_HOLD_TNO, 3,             1024,    USP_COMM_HOLD_MSG_KEY,USP_OSS_SCP_ERROR_TYPE_RESET, FALSE,    FALSE },
    #endif
    #if USP_OS_FREERTOS
    {"RecvCtrl",        usp_comm_recvCtrlEntry,    512,      1,      0,                 0,             0,       0,                   USP_OSS_SCP_ERROR_TYPE_RESET,  FALSE,    FALSE },
    #if USP_OSS_NET_USE
    {"ConnCtrl",        usp_comm_connCtrlEntry,    512,      1,      0,                 0,             0,       0,                   USP_OSS_SCP_ERROR_TYPE_RESET,  FALSE,    FALSE },
    #endif
    #endif
},
#endif
#if USP_OAM_IPD_USE
"usp_ipd", 0, USP_PUB_DEV_MODEL_COMMON,
{
    {"IPD",             usp_oam_ipd_entry,         0,        0,      USP_OAM_IPD_TNO, 1,             0,       USP_COMM_IPD_MSG_KEY, USP_OSS_SCP_ERROR_TYPE_RESET,  FALSE,    FALSE  },
},
#endif
#if USP_OAM_VMP_BODY_USE
"usp_vmp", 0, USP_PUB_DEV_MODEL_COMMON,
{
    {"VMP",             usp_oam_vmp_entry,         0,        0,      USP_OAM_VMP_TNO,   1,             0,       USP_OAM_VMP_MSG_KEY, USP_OSS_SCP_ERROR_TYPE_RESET,  FALSE,    FALSE  },
},
#endif

#if USP_OSS_SMP_USE
"usp_smp", 0, USP_PUB_DEV_MODEL_COMMON,
{
    {"SMP",             usp_oss_smp_entry,         0,        0,      USP_OSS_SMP_TNO,   1,             0,       USP_OSS_SMP_MSG_KEY, USP_OSS_SCP_ERROR_TYPE_RESET,  FALSE,    FALSE  },
},
#endif
#if USP_OAM_AMP_USE
"usp_amp", 0, USP_PUB_DEV_MODEL_COMMON,
{
    {"amp",              usp_oam_amp_entry,             0,        0,      USP_OAM_AMP_TNO,               1,             0,       USP_OAM_AMP_MSG_KEY, USP_OSS_SCP_ERROR_TYPE_IGNORE, FALSE,    FALSE },
//    {"test_amp",              ampTest_Entry,             0,        0,      200,               1,             0,       9500, USP_OSS_SCP_ERROR_TYPE_IGNORE, FALSE,    FALSE },
},
#endif
#if USP_OSS_PSAM_EXT_USE
"usp_psam", 0, USP_PUB_DEV_MODEL_READER_ETC,
{
    {"psam",            usp_oss_psam_ext_entry,         0,        0,      USP_OSS_PSAM_EXT_TNO,          1,             0,       USP_OSS_PSAM_EXT_MSG_KEY, USP_OSS_SCP_ERROR_TYPE_IGNORE, FALSE,    FALSE },
},
#endif

#if USP_VIR_TAG_USE
"usp_vir_tag", 0,  USP_PUB_DEV_MODEL_READER_UHF,
{
    {"vir_tag",            usp_vir_tagEntry,         0,        0,      USP_VIR_TAG_TNO,          1,             0,       USP_VIR_TAG_MSG_KEY, USP_OSS_SCP_ERROR_TYPE_IGNORE, FALSE,    FALSE },
},
#endif
#if USP_IDTE_USE
"usp_idte", 0, USP_PUB_DEV_MODEL_COMMON,
{
    {"SUB",             SubsidiaryRun,             0,        0,      USP_IDTE_SUB_TNO,   1,             0,       USP_IDTE_SUB_MSG_KEY, USP_OSS_SCP_ERROR_TYPE_RESET,  FALSE,    FALSE },
    {"CASE",            CaseAppRun,                0,        0,      USP_IDTE_CASE_TNO,  1,             0,       USP_IDTE_CASE_MSG_KEY, USP_OSS_SCP_ERROR_TYPE_RESET,  FALSE,    FALSE }, 
},
#endif
#if MPI_PROTOCOL_USE
"usp_mpi", 0, USP_PUB_DEV_MODEL_READER_MPI,
{
    {"MPI",             usp_pro_mpi_MainEntry,         0,        0,      USP_MPI_TNO,   1,             0,       USP_MPI_PROTOCOL_KEY, USP_OSS_SCP_ERROR_TYPE_RESET,  FALSE,    FALSE  },
},
#endif

#if USP_PROTOCOL_ETC_USE
"usp_etc", 0, USP_PUB_DEV_MODEL_READER_ETC,
{
    {"ETC",             usp_protocol_etc_dsrcEntry,  0,        0,      USP_PROTOCOL_DSRC_TNO,   1,             0,       USP_ETC_PROTOCOL_KEY, USP_OSS_SCP_ERROR_TYPE_RESET,  FALSE,    FALSE  },
},
#endif

#if USP_OSS_GPIO_USE
"usp_gpio", 0, USP_PUB_DEV_MODEL_COMMON,
{
    {"GPIO",            usp_oss_gpio_msgProcEntry,      0,        0,      USP_OSS_GPIO_TNO,              1,             0,       USP_OSS_GPIO_MSG_KEY,     USP_OSS_SCP_ERROR_TYPE_RESET,  FALSE,    FALSE },
    {"GpioInterrupt",   usp_oss_gpio_interruptProcEntry,0,        0,                     0,              0,             0,       0,                        USP_OSS_SCP_ERROR_TYPE_RESET,  FALSE,    FALSE },

},
#endif

#if USP_OSS_MISC_USE
"usp_misc", 0, USP_PUB_DEV_MODEL_COMMON,
{
    {"MISC",            usp_oss_misc_entry,             0,        0,      USP_OSS_MISC_TNO,              1,             0,       USP_OSS_MISC_MSG_KEY,     USP_OSS_SCP_ERROR_TYPE_RESET,  FALSE,    FALSE },
},
#endif

SCP_END_TASK_DEFINE

/***********************************************************
 *                  任务上电配置                           *
 ***********************************************************/
/* 配置第一轮上电进程 */
SCP_FIRST_POWERON_TNO(USP_OAM_CMP_TNO, USP_OAM_VMP_TNO)

/* 配置第二轮上电进程 */
SCP_SECOND_POWERON_TNO(USP_OAM_AMP_TNO,USP_OSS_SMP_TNO,USP_OAM_VMP_TNO, USP_RDP_LLRP_TNO,USP_UHF_TNO)

/* 配置第三轮上电进程 */
SCP_THIRD_POWERON_TNO(USP_OAM_DMP_TNO, USP_OSS_GPIO_TNO, USP_COMM_TNO, USP_OAM_VMP_TNO)

#endif  /* _OSS_SCP_C_INCLUDE */






