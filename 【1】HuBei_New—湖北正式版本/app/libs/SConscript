import os
import subprocess

Import('env')

def build(target, source, env):
    script_dir = os.path.dirname(str(source[0]))
    subprocess.call("sh " + script_dir + "/generate_pb.sh" ,  shell=True)
    subprocess.call("cp -f " + script_dir + "/*.lua app/www/cgi" , shell=True)
    return None

my_env = env.Clone(LIBPATH='', LIBS='')

#my_env.Command(['source/scheduler.pb.cc', 'include/scheduler.pb.h'], ['scheduler.proto'], build)

d = my_env.ParseFlags('-lzmq -ljsonmt -lstdc++ -lpthread -levent')
my_env.MergeFlags(d)

libs = my_env.SharedLibrary('libapp', ['source/logmlib.cc', 'source/timerlib.cc', 'source/parson.c',\
	                       'source/uhf_vir_fpga.c','source/ftplib.c','source/abn.c', 'source/jiffslib.cc', 'source/linkcache.cc'])
my_env.Install('$LIB_DIR', libs)
