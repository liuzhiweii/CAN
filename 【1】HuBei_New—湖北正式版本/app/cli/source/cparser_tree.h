/*----------------------------------------------------------------------
 * This file is generated by mk_parser.py.
 *----------------------------------------------------------------------*/
#ifndef __CPARSER_TREE_H__
#define __CPARSER_TREE_H__

#ifdef __cplusplus
extern "C" {
#endif /* __cplusplus */

extern cparser_node_t cparser_root;

cparser_result_t cparser_cmd_config(cparser_context_t *context);
cparser_result_t cparser_cmd_config_exit(cparser_context_t *context);
cparser_result_t cparser_cmd_config_get_key(cparser_context_t *context,
    char **key_ptr);
cparser_result_t cparser_cmd_config_set_key_value(cparser_context_t *context,
    char **key_ptr,
    char **value_ptr);
cparser_result_t cparser_cmd_config_save(cparser_context_t *context);
cparser_result_t cparser_cmd_config_restore(cparser_context_t *context);
cparser_result_t cparser_cmd_config_reset(cparser_context_t *context);
cparser_result_t cparser_cmd_config_help_filter(cparser_context_t *context,
    char **filter_ptr);
cparser_result_t cparser_cmd_version(cparser_context_t *context);
cparser_result_t cparser_cmd_version_exit(cparser_context_t *context);
cparser_result_t cparser_cmd_version_download_version_ServerType_VersionType_VersionName_ServerIP_Port_UserName_PassWord(cparser_context_t *context,
    char **ServerType_ptr,
    char **VersionType_ptr,
    char **VersionName_ptr,
    uint32_t *ServerIP_ptr,
    uint32_t *Port_ptr,
    char **UserName_ptr,
    char **PassWord_ptr);
cparser_result_t cparser_cmd_version_query(cparser_context_t *context);
cparser_result_t cparser_cmd_version_switch(cparser_context_t *context);
cparser_result_t cparser_cmd_version_unswitch(cparser_context_t *context);
cparser_result_t cparser_cmd_version_help_filter(cparser_context_t *context,
    char **filter_ptr);
cparser_result_t cparser_cmd_diagnose(cparser_context_t *context);
cparser_result_t cparser_cmd_drvtest(cparser_context_t *context);
cparser_result_t cparser_cmd_drvtest_exit(cparser_context_t *context);
cparser_result_t cparser_cmd_drvtest_norflash_mod_offset_len_data(cparser_context_t *context,
    char **mod_ptr,
    uint32_t *offset_ptr,
    uint32_t *len_ptr,
    uint32_t *data_ptr);
cparser_result_t cparser_cmd_drvtest_epld_mod_addr_data(cparser_context_t *context,
    char **mod_ptr,
    uint32_t *addr_ptr,
    uint32_t *data_ptr);
cparser_result_t cparser_cmd_drvtest_eeprom_mod_data(cparser_context_t *context,
    char **mod_ptr,
    uint32_t *data_ptr);
cparser_result_t cparser_cmd_drvtest_eepromaddr_mod_addr_len_data(cparser_context_t *context,
    char **mod_ptr,
    uint32_t *addr_ptr,
    uint32_t *len_ptr,
    char **data_ptr);
cparser_result_t cparser_cmd_drvtest_seteeprom_configPath(cparser_context_t *context,
    char **configPath_ptr);
cparser_result_t cparser_cmd_drvtest_uart_index_baundrate_testMode_loopNum(cparser_context_t *context,
    int32_t *index_ptr,
    int32_t *baundrate_ptr,
    char **testMode_ptr,
    int32_t *loopNum_ptr);
cparser_result_t cparser_cmd_drvtest_wtd_wtd_mod(cparser_context_t *context,
    char **wtd_mod_ptr);
cparser_result_t cparser_cmd_drvtest_psam_pasm_mod_VALUE(cparser_context_t *context,
    char **pasm_mod_ptr,
    int32_t *VALUE_ptr);
cparser_result_t cparser_cmd_drvtest_loadfpga_verPath(cparser_context_t *context,
    char **verPath_ptr);
cparser_result_t cparser_cmd_drvtest_fpga_mod_addr_data(cparser_context_t *context,
    char **mod_ptr,
    uint32_t *addr_ptr,
    uint32_t *data_ptr);
cparser_result_t cparser_cmd_drvtest_lcd_mod(cparser_context_t *context,
    char **mod_ptr);
cparser_result_t cparser_cmd_drvtest_led_mod_state(cparser_context_t *context,
    char **mod_ptr,
    int32_t *state_ptr);
cparser_result_t cparser_cmd_drvtest_devicectl_mod_devlist_powctl(cparser_context_t *context,
    char **mod_ptr,
    int32_t *devlist_ptr,
    int32_t *powctl_ptr);
cparser_result_t cparser_cmd_drvtest_key(cparser_context_t *context);
cparser_result_t cparser_cmd_drvtest_ver(cparser_context_t *context);
cparser_result_t cparser_cmd_drvtest_rtcset_year_mon_mon_day_week_day_hour_min_sec(cparser_context_t *context,
    int32_t *year_ptr,
    int32_t *mon_ptr,
    int32_t *mon_day_ptr,
    int32_t *week_day_ptr,
    int32_t *hour_ptr,
    int32_t *min_ptr,
    int32_t *sec_ptr);
cparser_result_t cparser_cmd_drvtest_rtcget(cparser_context_t *context);
cparser_result_t cparser_cmd_drvtest_tsentor_mod_id_temper(cparser_context_t *context,
    char **mod_ptr,
    int32_t *id_ptr,
    int32_t *temper_ptr);
cparser_result_t cparser_cmd_drvtest_net_loopNum(cparser_context_t *context,
    int32_t *loopNum_ptr);
cparser_result_t cparser_cmd_drvtest_help_filter(cparser_context_t *context,
    char **filter_ptr);
cparser_result_t cparser_cmd_help_filter(cparser_context_t *context,
    char **filter_ptr);
cparser_result_t cparser_cmd_quit(cparser_context_t *context);

#ifdef __cplusplus
}
#endif /* __cplusplus */

#endif /* __CPARSER_TREE_H__ */
