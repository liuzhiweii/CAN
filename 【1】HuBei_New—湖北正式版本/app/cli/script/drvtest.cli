// This .cli file is included in main.cli

// When users enter "drvtest", it enters drvtest sub-mode.
// In this sub-mode, we can get,set or save drvtest

#submode "drvtest"

// Exit drvtest submode
exit

// test norflash, mod:write,read,erase,info;offset:offset>0x3c00000;len:len<0x40000;data:write data
norflash <STRING:mod> <HEX:offset> <HEX:len> <HEX:data>

// test epld ,mode:write,read;addr:epld reg address;data:input 16bit HEX data.
epld <STRING:mod> <HEX:addr> <HEX:data> 

// test eeprom,mode:save,write,read,recover
eeprom <STRING:mod> <HEX:data>

// test eeprom,mode:write,read
eepromaddr <STRING:mod> <UINT:addr> <UINT:len> { <STRING:data> }

//seteeprom,configPath:config file path
seteeprom <STRING:configPath>

// test uart. index:0,1,2; baundrate:115200,9600...; testMode:rec_send,loopback; loopNum:loopNum>0
uart <INT:index> <INT:baundrate> <STRING:testMode> <INT:loopNum>

// test watch dog.wtd_mod:softWtd,hwWtd,stopWtd;
wtd <STRING:wtd_mod>

// test psam. pasm_mod:init,setclk,active,deactive,getrand,choseapp,getkey,decryptinfo,decrypt,enablepps,disablepps;VALUE:init mode:invalid,setclk mode :divclk,other:CardId(0~3);
psam <STRING:pasm_mod> <INT:VALUE>

// test load fpga version.verPath:version file path.
loadfpga <STRING:verPath>

// test fpga ,mode:write,read;addr:fpga reg address;data:input 16bit HEX data.
fpga <STRING:mod> <HEX:addr> <HEX:data> 

// test lcd ,mode:clear,light;showstr
lcd <STRING:mod> 

// test led ,mode:run,pasm;alarm.state:0:off;1:on.
led <STRING:mod> <INT:state>

// test devicectl ,mode:rst,pow;devlist:rst mode:(usb:0,752:1,eth2:2,eth1:3);pow mod:(rf:0,sd:1,oled:2,usb:3,psam0~3:4~7);powctl:0:off;1:on.
devicectl <STRING:mod> <INT:devlist> <INT:powctl>

// test key,input key
key

// test veriche
ver

// set rtc
rtcset <INT:year> <INT:mon> <INT:mon_day> <INT:week_day> <INT:hour> <INT:min> <INT:sec>

// get rtc
rtcget

// test tsentor,mode:set,get;id:0-6;temper:set temperature value
tsentor <STRING:mod> <INT:id> <INT:temper>

// test net,loopNum:loopNum>0 
net <INT:loopNum>
 
// List all available commands with a substring 'filter' in it.
help { <STRING:filter> }

#endsubmode
